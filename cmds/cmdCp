#!/bin/sh
#
#  Command to copy a file
#



instdir=$(cd $(dirname $0); pwd)
. ${instdir}/log.sh
log_init $0


usage()
{
    echo "cp {args}"

}

#O=`getopt h "$@"` || exit 1
#eval set -- "$O"
#while true; do
#    case "$1" in
#        -h) 
#           usage
#            exit 0
#            ;;
#        --)
#            aEcho option1
#            #shift
#            break;
#           ;;
#	   *)
#           log "[E] unknown arg:  $1)"
#           break;
#           ;;
#         
#    esac
#done

#Loop causing multiple issues that could not be resolved after extensive testing. Temporary fix below for help system:
if [ $1 = -h ]; then
	usage
fi 

# shift the args beyond the getopt options
# shift "$((OPTIND-1))" broken



#
# Validate input
#

#
# Execute cp command, intercepting the output so we can filter it
#

cp $* >> /dev/null 
 
exitStatus=0

if [ $exitStatus -eq 0 ]; then
  echo "cp $*"
else
  log "[E] cp error:  $*"
fi

# Technically, the last command exit status will be used as the exit status.
# However we want to be explicit to avoid  errors in status if anything else
# gets executed (like logging) before the program exits
exit $exitStatus

