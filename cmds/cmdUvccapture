#!/bin/sh
#
#  Command to capture a photo
#
instdir=$(cd $(dirname $0); pwd)
. ${instdir}/log.sh
log_init $0

#
usage()
{
    echo "uvvcapture {args}"
}

O=`getopt h "$@"` || exit 1
eval set -- "$O"
while true; do
    case "$1" in
        -h) 
            usage
            exit 0
            ;;
        --)
            shift
            break;
            ;;
        *)
           log "[E] unknown arg:  $1)"
           exit 1
           ;;
            
    esac
done


# shift the args beyond the getopt options
shift "$((OPTIND-1))"



#
# Validate input
#

args = "" 
#
# Execute rm command, intercepting the output so we can filter it
# 
flag = false; 
for a in $@  
do
 if["$flag" = false]; then 
    flag = true; 
    continue; 
 fi
 args+= " "
 args+= a
 args+= " "
done 

uvccapture $args

exitStatus=$?

if [ $exitStatus -eq 0 ]; then
  echo "uvccapture @args"
else
  log "[E] uvccapture error:  $*"
fi
# Technically, the last command exit status will be used as the exit status.
# However we want to be explicit to avoid  errors in status if anything else
# gets executed (like logging) before the program exits
exit $exitStatus

